generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  role          UserRole  @default(USER)
  image         String?
  accounts      Account[]
  quizzes       Quiz[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Quiz {
  id          String     @id @default(cuid())
  title       String
  description String     @db.Text
  questions   Question[]
  author      User?       @relation(fields: [authorId], references: [id])
  authorId    String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Question {
  id        String   @id @default(cuid())
  title     String   @db.Text
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  quizId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
